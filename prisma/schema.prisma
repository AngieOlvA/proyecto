// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  slug     String    @unique
  title    String
  body     String
  author   User      @relation(fields: [authorId], references: [id])
  authorId String    @db.ObjectId
  comments Comment[]
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  address Address?
  posts   Post[]
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  comment String
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
}

// Address is an embedded document
type Address {
  street String
  city   String
  state  String
  zip    String
}



//////////////modulos de la aplicacion 
model Carrera {
  id          String  @id @default(uuid()) @map("_id")
  userId      String
  title       String 
  description String? @db.String
  imageUrl String? @db.String
  price Float?
  isPublished Boolean @default(false)

  categoryId String?
  category Category? @relation(fields: [categoryId],references: [id])


  attachments Attechment[]

  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt 

  @@index([categoryId])
}

model Category{
  id  String @id @default(uuid()) @map("_id")
  name String @unique
  carreras Carrera[]
}

model Attechment{
   id  String  @id @default(uuid()) @map("_id")
   name String
   url String

   carreraId String
   carrera Carrera @relation(fields: [carreraId], references: [id], onDelete: Cascade)

   createdAt DateTime @default(now())
   updateAt DateTime @updatedAt

   @@index([carreraId])

}
